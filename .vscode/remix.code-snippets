{
  "loader": {
    "prefix": "remix-loader",
    "body": [
      "export async function loader({ request }: LoaderFunctionArgs) {",
      "  return null",
      "}"
    ]
  },
  "action": {
    "prefix": "remix-action",
    "body": [
      "export async function action({ request }: ActionFunctionArgs) {",
      "  return null",
      "}"
    ]
  },
  "default": {
    "prefix": "remix-page",
    "body": [
      "export default function ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g}() {",
      " return (",
      "  <div>",
      "    <h1>Page</h1>",
      "  </div>",
      " )",
      "}"
    ]
  },
  "headers": {
    "prefix": "remix-headers",
    "body": [
      "export const headers: HeadersFunction = ({ loaderHeaders }) => ({",
      "  'Cache-Control': loaderHeaders.get('Cache-Control') ?? '',",
      "})"
    ]
  },
  "links": {
    "prefix": "remix-links",
    "body": ["export const links: LinksFunction = () => {", "  return []", "}"]
  },
  "dynamic-meta": {
    "prefix": "remix-dynamic-meta",
    "body": [
      "export const meta: MetaFunction<typeof loader> = ({ data }) => [{",
      "  title: 'Title',",
      "}]"
    ]
  },
  "meta": {
    "prefix": "remix-meta",
    "body": [
      "export const meta: MetaFunction  = () => [{",
      "  title: 'Title',",
      "}]"
    ]
  },
  "shouldRevalidate": {
    "prefix": "remix-shouldRevalidate",
    "body": [
      "export const shouldRevalidate: ShouldRevalidateFunction = ({",
      "  defaultShouldRevalidate",
      "}) => {",
      "  return defaultShouldRevalidate",
      "}"
    ]
  }
}
